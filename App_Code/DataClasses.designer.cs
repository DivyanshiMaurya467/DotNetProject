#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyDatabase")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertContactTable(ContactTable instance);
  partial void UpdateContactTable(ContactTable instance);
  partial void DeleteContactTable(ContactTable instance);
  partial void InsertBudgetMasterTable(BudgetMasterTable instance);
  partial void UpdateBudgetMasterTable(BudgetMasterTable instance);
  partial void DeleteBudgetMasterTable(BudgetMasterTable instance);
  partial void InsertCartTable(CartTable instance);
  partial void UpdateCartTable(CartTable instance);
  partial void DeleteCartTable(CartTable instance);
  partial void InsertAdminTable(AdminTable instance);
  partial void UpdateAdminTable(AdminTable instance);
  partial void DeleteAdminTable(AdminTable instance);
  partial void InsertProfileTable(ProfileTable instance);
  partial void UpdateProfileTable(ProfileTable instance);
  partial void DeleteProfileTable(ProfileTable instance);
  partial void InsertAddProductTable(AddProductTable instance);
  partial void UpdateAddProductTable(AddProductTable instance);
  partial void DeleteAddProductTable(AddProductTable instance);
  partial void InsertCategoryTable(CategoryTable instance);
  partial void UpdateCategoryTable(CategoryTable instance);
  partial void DeleteCategoryTable(CategoryTable instance);
  partial void InsertBillingTable(BillingTable instance);
  partial void UpdateBillingTable(BillingTable instance);
  partial void DeleteBillingTable(BillingTable instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MyDatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<ContactTable> ContactTables
	{
		get
		{
			return this.GetTable<ContactTable>();
		}
	}
	
	public System.Data.Linq.Table<BudgetMasterTable> BudgetMasterTables
	{
		get
		{
			return this.GetTable<BudgetMasterTable>();
		}
	}
	
	public System.Data.Linq.Table<CartTable> CartTables
	{
		get
		{
			return this.GetTable<CartTable>();
		}
	}
	
	public System.Data.Linq.Table<AdminTable> AdminTables
	{
		get
		{
			return this.GetTable<AdminTable>();
		}
	}
	
	public System.Data.Linq.Table<ProfileTable> ProfileTables
	{
		get
		{
			return this.GetTable<ProfileTable>();
		}
	}
	
	public System.Data.Linq.Table<AddProductTable> AddProductTables
	{
		get
		{
			return this.GetTable<AddProductTable>();
		}
	}
	
	public System.Data.Linq.Table<CategoryTable> CategoryTables
	{
		get
		{
			return this.GetTable<CategoryTable>();
		}
	}
	
	public System.Data.Linq.Table<BillingTable> BillingTables
	{
		get
		{
			return this.GetTable<BillingTable>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactTable")]
public partial class ContactTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Email;
	
	private string _Subject;
	
	private string _Message;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
	
	public ContactTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(50)")]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BudgetMasterTable")]
public partial class BudgetMasterTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _CarpetArea;
	
	private string _PaintProduct;
	
	private System.Nullable<int> _Price;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCarpetAreaChanging(System.Nullable<int> value);
    partial void OnCarpetAreaChanged();
    partial void OnPaintProductChanging(string value);
    partial void OnPaintProductChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    #endregion
	
	public BudgetMasterTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarpetArea", DbType="Int")]
	public System.Nullable<int> CarpetArea
	{
		get
		{
			return this._CarpetArea;
		}
		set
		{
			if ((this._CarpetArea != value))
			{
				this.OnCarpetAreaChanging(value);
				this.SendPropertyChanging();
				this._CarpetArea = value;
				this.SendPropertyChanged("CarpetArea");
				this.OnCarpetAreaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaintProduct", DbType="VarChar(50)")]
	public string PaintProduct
	{
		get
		{
			return this._PaintProduct;
		}
		set
		{
			if ((this._PaintProduct != value))
			{
				this.OnPaintProductChanging(value);
				this.SendPropertyChanging();
				this._PaintProduct = value;
				this.SendPropertyChanged("PaintProduct");
				this.OnPaintProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
	public System.Nullable<int> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CartTable")]
public partial class CartTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _Pid;
	
	private System.Nullable<int> _Uid;
	
	private System.Nullable<int> _Qty;
	
	private System.Nullable<int> _TotalAmount;
	
	private string _Status;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPidChanging(System.Nullable<int> value);
    partial void OnPidChanged();
    partial void OnUidChanging(System.Nullable<int> value);
    partial void OnUidChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnTotalAmountChanging(System.Nullable<int> value);
    partial void OnTotalAmountChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
	
	public CartTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid", DbType="Int")]
	public System.Nullable<int> Pid
	{
		get
		{
			return this._Pid;
		}
		set
		{
			if ((this._Pid != value))
			{
				this.OnPidChanging(value);
				this.SendPropertyChanging();
				this._Pid = value;
				this.SendPropertyChanged("Pid");
				this.OnPidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="Int")]
	public System.Nullable<int> Uid
	{
		get
		{
			return this._Uid;
		}
		set
		{
			if ((this._Uid != value))
			{
				this.OnUidChanging(value);
				this.SendPropertyChanging();
				this._Uid = value;
				this.SendPropertyChanged("Uid");
				this.OnUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
	public System.Nullable<int> Qty
	{
		get
		{
			return this._Qty;
		}
		set
		{
			if ((this._Qty != value))
			{
				this.OnQtyChanging(value);
				this.SendPropertyChanging();
				this._Qty = value;
				this.SendPropertyChanged("Qty");
				this.OnQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Int")]
	public System.Nullable<int> TotalAmount
	{
		get
		{
			return this._TotalAmount;
		}
		set
		{
			if ((this._TotalAmount != value))
			{
				this.OnTotalAmountChanging(value);
				this.SendPropertyChanging();
				this._TotalAmount = value;
				this.SendPropertyChanged("TotalAmount");
				this.OnTotalAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminTable")]
public partial class AdminTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _AdminName;
	
	private string _AdminEmail;
	
	private string _AdminPic;
	
	private string _Password;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    partial void OnAdminEmailChanging(string value);
    partial void OnAdminEmailChanged();
    partial void OnAdminPicChanging(string value);
    partial void OnAdminPicChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public AdminTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="VarChar(50)")]
	public string AdminName
	{
		get
		{
			return this._AdminName;
		}
		set
		{
			if ((this._AdminName != value))
			{
				this.OnAdminNameChanging(value);
				this.SendPropertyChanging();
				this._AdminName = value;
				this.SendPropertyChanged("AdminName");
				this.OnAdminNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminEmail", DbType="VarChar(50)")]
	public string AdminEmail
	{
		get
		{
			return this._AdminEmail;
		}
		set
		{
			if ((this._AdminEmail != value))
			{
				this.OnAdminEmailChanging(value);
				this.SendPropertyChanging();
				this._AdminEmail = value;
				this.SendPropertyChanged("AdminEmail");
				this.OnAdminEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPic", DbType="VarChar(MAX)")]
	public string AdminPic
	{
		get
		{
			return this._AdminPic;
		}
		set
		{
			if ((this._AdminPic != value))
			{
				this.OnAdminPicChanging(value);
				this.SendPropertyChanging();
				this._AdminPic = value;
				this.SendPropertyChanged("AdminPic");
				this.OnAdminPicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfileTable")]
public partial class ProfileTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _MobNo;
	
	private string _Email;
	
	private string _Password;
	
	private string _CPassword;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobNoChanging(string value);
    partial void OnMobNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCPasswordChanging(string value);
    partial void OnCPasswordChanged();
    #endregion
	
	public ProfileTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobNo", DbType="VarChar(10)")]
	public string MobNo
	{
		get
		{
			return this._MobNo;
		}
		set
		{
			if ((this._MobNo != value))
			{
				this.OnMobNoChanging(value);
				this.SendPropertyChanging();
				this._MobNo = value;
				this.SendPropertyChanged("MobNo");
				this.OnMobNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPassword", DbType="VarChar(50)")]
	public string CPassword
	{
		get
		{
			return this._CPassword;
		}
		set
		{
			if ((this._CPassword != value))
			{
				this.OnCPasswordChanging(value);
				this.SendPropertyChanging();
				this._CPassword = value;
				this.SendPropertyChanged("CPassword");
				this.OnCPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddProductTable")]
public partial class AddProductTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Pro_Name;
	
	private string _Pro_Category;
	
	private string _Pro_Pic;
	
	private string _Co_Name;
	
	private System.Nullable<int> _Price;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPro_NameChanging(string value);
    partial void OnPro_NameChanged();
    partial void OnPro_CategoryChanging(string value);
    partial void OnPro_CategoryChanged();
    partial void OnPro_PicChanging(string value);
    partial void OnPro_PicChanged();
    partial void OnCo_NameChanging(string value);
    partial void OnCo_NameChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    #endregion
	
	public AddProductTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Name", DbType="VarChar(50)")]
	public string Pro_Name
	{
		get
		{
			return this._Pro_Name;
		}
		set
		{
			if ((this._Pro_Name != value))
			{
				this.OnPro_NameChanging(value);
				this.SendPropertyChanging();
				this._Pro_Name = value;
				this.SendPropertyChanged("Pro_Name");
				this.OnPro_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Category", DbType="VarChar(50)")]
	public string Pro_Category
	{
		get
		{
			return this._Pro_Category;
		}
		set
		{
			if ((this._Pro_Category != value))
			{
				this.OnPro_CategoryChanging(value);
				this.SendPropertyChanging();
				this._Pro_Category = value;
				this.SendPropertyChanged("Pro_Category");
				this.OnPro_CategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Pic", DbType="VarChar(MAX)")]
	public string Pro_Pic
	{
		get
		{
			return this._Pro_Pic;
		}
		set
		{
			if ((this._Pro_Pic != value))
			{
				this.OnPro_PicChanging(value);
				this.SendPropertyChanging();
				this._Pro_Pic = value;
				this.SendPropertyChanged("Pro_Pic");
				this.OnPro_PicChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Co_Name", DbType="VarChar(50)")]
	public string Co_Name
	{
		get
		{
			return this._Co_Name;
		}
		set
		{
			if ((this._Co_Name != value))
			{
				this.OnCo_NameChanging(value);
				this.SendPropertyChanging();
				this._Co_Name = value;
				this.SendPropertyChanged("Co_Name");
				this.OnCo_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
	public System.Nullable<int> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryTable")]
public partial class CategoryTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _CName;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCNameChanging(string value);
    partial void OnCNameChanged();
    #endregion
	
	public CategoryTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string CName
	{
		get
		{
			return this._CName;
		}
		set
		{
			if ((this._CName != value))
			{
				this.OnCNameChanging(value);
				this.SendPropertyChanging();
				this._CName = value;
				this.SendPropertyChanged("CName");
				this.OnCNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingTable")]
public partial class BillingTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _Uid;
	
	private string _DAddress;
	
	private System.Nullable<int> _TotalPrice;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUidChanging(System.Nullable<int> value);
    partial void OnUidChanged();
    partial void OnDAddressChanging(string value);
    partial void OnDAddressChanged();
    partial void OnTotalPriceChanging(System.Nullable<int> value);
    partial void OnTotalPriceChanged();
    #endregion
	
	public BillingTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="Int")]
	public System.Nullable<int> Uid
	{
		get
		{
			return this._Uid;
		}
		set
		{
			if ((this._Uid != value))
			{
				this.OnUidChanging(value);
				this.SendPropertyChanging();
				this._Uid = value;
				this.SendPropertyChanged("Uid");
				this.OnUidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAddress", DbType="VarChar(50)")]
	public string DAddress
	{
		get
		{
			return this._DAddress;
		}
		set
		{
			if ((this._DAddress != value))
			{
				this.OnDAddressChanging(value);
				this.SendPropertyChanging();
				this._DAddress = value;
				this.SendPropertyChanged("DAddress");
				this.OnDAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Int")]
	public System.Nullable<int> TotalPrice
	{
		get
		{
			return this._TotalPrice;
		}
		set
		{
			if ((this._TotalPrice != value))
			{
				this.OnTotalPriceChanging(value);
				this.SendPropertyChanging();
				this._TotalPrice = value;
				this.SendPropertyChanged("TotalPrice");
				this.OnTotalPriceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
